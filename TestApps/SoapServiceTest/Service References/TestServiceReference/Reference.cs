//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapServiceTest.TestServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexType", Namespace="http://schemas.datacontract.org/2004/07/SoapAndRestService")]
    [System.SerializableAttribute()]
    public partial class ComplexType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SimpleFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SimpleField {
            get {
                return this.SimpleFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.SimpleFieldField, value) != true)) {
                    this.SimpleFieldField = value;
                    this.RaisePropertyChanged("SimpleField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestServiceReference.ITestService")]
    public interface ITestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/GetStringData", ReplyAction="http://tempuri.org/ITestService/GetStringDataResponse")]
        string GetStringData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/GetStringData", ReplyAction="http://tempuri.org/ITestService/GetStringDataResponse")]
        System.Threading.Tasks.Task<string> GetStringDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/GetComplexData", ReplyAction="http://tempuri.org/ITestService/GetComplexDataResponse")]
        SoapServiceTest.TestServiceReference.ComplexType GetComplexData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/GetComplexData", ReplyAction="http://tempuri.org/ITestService/GetComplexDataResponse")]
        System.Threading.Tasks.Task<SoapServiceTest.TestServiceReference.ComplexType> GetComplexDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/GetSimpleList", ReplyAction="http://tempuri.org/ITestService/GetSimpleListResponse")]
        string[] GetSimpleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/GetSimpleList", ReplyAction="http://tempuri.org/ITestService/GetSimpleListResponse")]
        System.Threading.Tasks.Task<string[]> GetSimpleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/GetListOfComplexData", ReplyAction="http://tempuri.org/ITestService/GetListOfComplexDataResponse")]
        SoapServiceTest.TestServiceReference.ComplexType[] GetListOfComplexData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestService/GetListOfComplexData", ReplyAction="http://tempuri.org/ITestService/GetListOfComplexDataResponse")]
        System.Threading.Tasks.Task<SoapServiceTest.TestServiceReference.ComplexType[]> GetListOfComplexDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestServiceChannel : SoapServiceTest.TestServiceReference.ITestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceClient : System.ServiceModel.ClientBase<SoapServiceTest.TestServiceReference.ITestService>, SoapServiceTest.TestServiceReference.ITestService {
        
        public TestServiceClient() {
        }
        
        public TestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetStringData() {
            return base.Channel.GetStringData();
        }
        
        public System.Threading.Tasks.Task<string> GetStringDataAsync() {
            return base.Channel.GetStringDataAsync();
        }
        
        public SoapServiceTest.TestServiceReference.ComplexType GetComplexData() {
            return base.Channel.GetComplexData();
        }
        
        public System.Threading.Tasks.Task<SoapServiceTest.TestServiceReference.ComplexType> GetComplexDataAsync() {
            return base.Channel.GetComplexDataAsync();
        }
        
        public string[] GetSimpleList() {
            return base.Channel.GetSimpleList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetSimpleListAsync() {
            return base.Channel.GetSimpleListAsync();
        }
        
        public SoapServiceTest.TestServiceReference.ComplexType[] GetListOfComplexData() {
            return base.Channel.GetListOfComplexData();
        }
        
        public System.Threading.Tasks.Task<SoapServiceTest.TestServiceReference.ComplexType[]> GetListOfComplexDataAsync() {
            return base.Channel.GetListOfComplexDataAsync();
        }
    }
}
